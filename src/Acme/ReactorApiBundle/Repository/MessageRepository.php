<?php

namespace Acme\ReactorApiBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * MessageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MessageRepository extends EntityRepository
{
    public function findAllByUserId($id, $from, $to)
    {
        return $this->getEntityManager()
            ->createQuery('
                SELECT ms.id, ms.from_user, ms.to_user, ms.text, ms.photo, ms.reaction_photo, ms.is_read, ms.created_at, u.username, (ut.username) AS to_username
                FROM AcmeReactorApiBundle:Message ms
                LEFT JOIN ms.from u
                LEFT JOIN ms.to ut
                WHERE ms.to_user = :id
                  OR ms.from_user = :id
                ORDER BY ms.created_at DESC'
            )
            ->setFirstResult($from)
            ->setMaxResults($to)
            ->setParameters(array('id' => $id))->getArrayResult();
    }

    public function findByIdAndToUser($id, $toUser)
    {
        return $this->getEntityManager()
            ->createQuery('
                SELECT ms
                FROM AcmeReactorApiBundle:Message ms
                WHERE ms.to_user = :to_user
                  AND ms.id = :id
                ORDER BY ms.created_at DESC'
            )->setParameters(array('id' => $id, 'to_user' => $toUser))->getOneOrNullResult();
    }

    public function countNotRead($userId)
    {
        $messages = $this->getEntityManager()
                ->createQuery('
                    SELECT ms.id
                    FROM AcmeReactorApiBundle:Message ms
                    WHERE ms.to_user = :user_id
                      AND ms.is_read IS NULL'
                )->setParameters(array('user_id' => $userId))->getArrayResult();
        return count($messages);
    }

    public function deleteOldMessages()
    {
        $messages = $this->getEntityManager()
                ->createQuery('
                    DELETE AcmeReactorApiBundle:Message ms
                    WHERE ms.created_at <= :date ')
                ->setParameter('date', new \DateTime('-7 day'));
        $messages->getResult();
    }
}
